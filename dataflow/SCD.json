{
	"name": "SCD",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "Excel1",
						"type": "DatasetReference"
					},
					"name": "BlobDource"
				},
				{
					"dataset": {
						"referenceName": "SqlServerTable5",
						"type": "DatasetReference"
					},
					"name": "Maxkey"
				},
				{
					"dataset": {
						"referenceName": "SqlServerTable5",
						"type": "DatasetReference"
					},
					"name": "Targetref"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "SqlServerTable5",
						"type": "DatasetReference"
					},
					"name": "InsertTarget"
				},
				{
					"dataset": {
						"referenceName": "SqlServerTable5",
						"type": "DatasetReference"
					},
					"name": "sink1"
				},
				{
					"dataset": {
						"referenceName": "SqlServerTable5",
						"type": "DatasetReference"
					},
					"name": "sink2"
				}
			],
			"transformations": [
				{
					"name": "Select1"
				},
				{
					"name": "CrossJoin"
				},
				{
					"name": "Join1"
				},
				{
					"name": "Checkmatch"
				},
				{
					"name": "Join2"
				},
				{
					"name": "ConditionalSplit1"
				},
				{
					"name": "AlterRow1"
				},
				{
					"name": "DerivedColumn1"
				}
			],
			"script": "source(output(\n\t\tAgentid as integer,\n\t\tName as string,\n\t\tDesignation as string,\n\t\tContactno as integer,\n\t\tLocation as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> BlobDource\nsource(output(\n\t\tmaxkey as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: 'select max(scdkey) as maxkey from\\ndbo.dim_agent',\n\tformat: 'query') ~> Maxkey\nsource(output(\n\t\tscdkey as integer,\n\t\tAgentid as long,\n\t\tAgentname as string,\n\t\tDesination as string,\n\t\tcontactno as long,\n\t\tLocation as string,\n\t\tIsActive as integer,\n\t\tfromdate as date,\n\t\ttodate as date\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> Targetref\nBlobDource select(mapColumn(\n\t\tSrc_Agentid = Agentid,\n\t\tSrc_Name = Name,\n\t\tSrc_Designation = Designation,\n\t\tSrc_Contactno = Contactno,\n\t\tSrc_Location = Location\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\nSelect1, Maxkey join(1==1,\n\tjoinType:'cross',\n\tbroadcast: 'auto')~> CrossJoin\nCrossJoin, Targetref join(Src_Agentid == Agentid,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> Join1\nJoin1 split(Src_Agentid==Agentid,\n\tdisjoint: false) ~> Checkmatch@(Match, UnMatch)\nCheckmatch@Match, Targetref join(Src_Designation == Targetref@Desination,\n\tjoinType:'left',\n\tbroadcast: 'right')~> Join2\nJoin2 split(Src_Designation==Checkmatch@Match@Desination,\n\tdisjoint: false) ~> ConditionalSplit1@(DesigMatch, DesigUnmatch)\nConditionalSplit1@DesigMatch alterRow(updateIf(1==1)) ~> AlterRow1\nConditionalSplit1@DesigUnmatch derive(IsActive = 0,\n\t\ttodate = currentDate()) ~> DerivedColumn1\nCheckmatch@UnMatch sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tscdkey as integer,\n\t\tAgentid as long,\n\t\tAgentname as string,\n\t\tDesination as string,\n\t\tcontactno as long,\n\t\tLocation as string,\n\t\tIsActive as integer,\n\t\tfromdate as date,\n\t\ttodate as date\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tmapColumn(\n\t\tAgentid = Src_Agentid,\n\t\tAgentname = Src_Name,\n\t\tDesination = Src_Designation,\n\t\tcontactno = Src_Contactno,\n\t\tLocation = Src_Location\n\t)) ~> InsertTarget\nAlterRow1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tscdkey as integer,\n\t\tAgentid as long,\n\t\tAgentname as string,\n\t\tDesination as string,\n\t\tcontactno as long,\n\t\tLocation as string,\n\t\tIsActive as integer,\n\t\tfromdate as date,\n\t\ttodate as date\n\t),\n\tdeletable:false,\n\tinsertable:false,\n\tupdateable:true,\n\tupsertable:false,\n\tkeys:['Agentid'],\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tmapColumn(\n\t\tAgentid = Src_Agentid,\n\t\tcontactno = Src_Contactno,\n\t\tLocation = Src_Location\n\t)) ~> sink1\nConditionalSplit1@DesigUnmatch sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tscdkey as integer,\n\t\tAgentid as long,\n\t\tAgentname as string,\n\t\tDesination as string,\n\t\tcontactno as long,\n\t\tLocation as string,\n\t\tIsActive as integer,\n\t\tfromdate as date,\n\t\ttodate as date\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tmapColumn(\n\t\tAgentid = Src_Agentid,\n\t\tAgentname = Src_Name,\n\t\tDesination = Src_Designation,\n\t\tcontactno = Src_Contactno,\n\t\tLocation = Src_Location\n\t)) ~> sink2"
		}
	}
}